@model AttendanceSystem.ViewModel.CompanyRequestVM

@{
    ViewBag.Title = "Company Request";

    List<SelectListItem> lstPrefix = new List<SelectListItem>();
    lstPrefix.Add(new SelectListItem { Value = "Mr", Text = "Mr" });
    lstPrefix.Add(new SelectListItem { Value = "Mrs", Text = "Mrs" });
    lstPrefix.Add(new SelectListItem { Value = "Miss", Text = "Miss" });
}

<style>

    .form-control {
        border-color: #425C59 !important;
        border-width: 1.6px !important;
        border-radius: .25rem !important;
    }

    .btnSubmit {
        color: #FFCEA3;
        background: #425C59;
        border: 1px solid #425C59;
        padding: 10px;
        width: 100px;
        cursor: pointer;
        border-radius: 5px;
    }
</style>

<!--? Hero Start -->
<div class="slider-area2">
    <img src="@ViewBag.HeroUrl" class="d-block w-100" />
</div>
<!-- Hero End -->
<!-- ================ contact section start ================= -->
<section class="contact-section">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <h2 class="contact-title">Submit Request</h2>
            </div>
            <div class="col-lg-12">

                @using (Html.BeginForm("Index", "CompanyRequest", FormMethod.Post, new { @id = "CompanyRequestFormId", @class = "form-contact", enctype = "multipart/form-data", role = "form" }))
                {

                    <div class="row">
                        <div class="col-12">
                            <h5>Company Information</h5>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Company Name*</label>
                                @Html.TextBoxFor(model => model.CompanyName, new { @type = "text", @class = "form-control customuppercase", @placeholder = "Enter Company Name" })
                                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Company Type*</label>
                                @Html.DropDownListFor(model => model.CompanyTypeId, new SelectList(Model.CompanyTypeList, "Value", "Text"), "- Select -", new { @class = "form-control required" })
                                @Html.ValidationMessageFor(model => model.CompanyTypeId, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Email Id*</label>
                                @Html.TextBoxFor(model => model.CompanyEmailId, new { @type = "email", @class = "form-control", @placeholder = "Enter Company Email Id" })
                                @Html.ValidationMessageFor(model => model.CompanyEmailId, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Mobile No*</label>
                                @Html.TextBoxFor(model => model.CompanyContactNo, new { @type = "text", @class = "form-control", @placeholder = "Enter Company Mobile No", @maxlength = "10" })
                                @Html.ValidationMessageFor(model => model.CompanyContactNo, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Alternate Mobile No</label>
                                @Html.TextBoxFor(model => model.CompanyAlternateContactNo, new { @type = "text", @class = "form-control", @placeholder = "Enter Company Alternate Mobile No", @maxlength = "10" })
                                @Html.ValidationMessageFor(model => model.CompanyAlternateContactNo, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Website URL</label>
                                @Html.TextBoxFor(model => model.CompanyWebisteUrl, new { @type = "text", @class = "form-control", @placeholder = "Enter Company Website URL" })
                                @Html.ValidationMessageFor(model => model.CompanyWebisteUrl, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Company Description*</label>
                                @Html.TextAreaFor(model => model.CompanyDescription, 10, 5, new { @class = "form-control", @placeholder = "Enter Company Description", maxlength = "250" })
                                @Html.ValidationMessageFor(model => model.CompanyDescription, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Address*</label>
                                @Html.TextBoxFor(model => model.CompanyAddress, new { @type = "text", @class = "form-control customuppercase", @placeholder = "Enter Address" })
                                @Html.ValidationMessageFor(model => model.CompanyAddress, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>City*</label>
                                @Html.TextBoxFor(model => model.CompanyCity, new { @type = "Text", @class = "form-control customuppercase", @placeholder = "Enter City", @maxlength = "20" })
                                @Html.ValidationMessageFor(model => model.CompanyCity, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Pincode*</label>
                                @Html.TextBoxFor(model => model.CompanyPincode, new { @type = "Text", @class = "form-control", @placeholder = "Enter Pincode", @maxlength = "6" })
                                @Html.ValidationMessageFor(model => model.CompanyPincode, "", new { @class = "error" })
                            </div>
                        </div>

                    </div>
                    <div class="row" style="margin-bottom: 50px;">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>State*</label>
                                @Html.DropDownListFor(model => model.CompanyStateId, new SelectList(Model.CompanyStateList, "Value", "Text"), "- Select -", new { @class = "form-control required" })
                                @Html.ValidationMessageFor(model => model.CompanyStateId, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group dvCompanyDistrict">
                                <label>District*</label>
                                @Html.DropDownListFor(model => model.CompanyDistrictId, new SelectList(Model.CompanyDistrictList, "Value", "Text"), "- Select -", new { @class = "form-control required" })
                                @Html.ValidationMessageFor(model => model.CompanyDistrictId, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>GST No</label>
                                @Html.TextBoxFor(model => model.CompanyGSTNo, new { @type = "text", @class = "form-control customuppercase", @placeholder = "Enter Company GST No", @maxlength = "15" })
                                @Html.ValidationMessageFor(model => model.CompanyGSTNo, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Company GST Photo</label>
                                @Html.TextBoxFor(model => model.CompanyGSTPhotoFile, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CompanyGSTPhotoFile, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Pan Card No*</label>
                                @Html.TextBoxFor(model => model.CompanyPanNo, new { @type = "text", @class = "form-control customuppercase", @placeholder = "Enter Pan Card No", @maxlength = "10" })
                                @Html.ValidationMessageFor(model => model.CompanyPanNo, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Pan card Photo*</label>
                                @Html.TextBoxFor(model => model.CompanyPanPhotoFile, new { type = "file", @class = "form-control required" })
                                @Html.ValidationMessageFor(model => model.CompanyPanPhotoFile, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Company Logo*</label>
                                @Html.TextBoxFor(model => model.CompanyLogoImageFile, new { type = "file", @class = "form-control required" })
                                @Html.ValidationMessageFor(model => model.CompanyLogoImageFile, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Company Register Proof*</label>
                                @Html.TextBoxFor(model => model.CompanyRegisterProofImageFile, new { type = "file", @class = "form-control required" })
                                @Html.ValidationMessageFor(model => model.CompanyRegisterProofImageFile, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-12">
                            <h5>Company Admin Information</h5>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Prefix*</label>
                                @Html.DropDownListFor(model => model.CompanyAdminPrefix, new SelectList(lstPrefix, "Value", "Text"), "- Select -", new { @class = "form-control required", style = "width: 100%" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminPrefix, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>First Name*</label>
                                @Html.TextBoxFor(model => model.CompanyAdminFirstName, new { @type = "text", @class = "form-control required customuppercase", @placeholder = "Enter First Name" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminFirstName, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Middle Name*</label>
                                @Html.TextBoxFor(model => model.CompanyAdminMiddleName, new { @type = "text", @class = "form-control required customuppercase", @placeholder = "Enter Middle Name" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminMiddleName, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Last Name*</label>
                                @Html.TextBoxFor(model => model.CompanyAdminLastName, new { @type = "text", @class = "form-control required customuppercase", @placeholder = "Enter Last Name" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminLastName, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Email Id</label>
                                @Html.TextBoxFor(model => model.CompanyAdminEmailId, new { @type = "email", @class = "form-control required", @placeholder = "Enter Email Id" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminEmailId, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Date of Birth</label>
                                @Html.TextBoxFor(model => model.CompanyAdminDOB, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control required", @placeholder = "Enter Date of Birth" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminDOB, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Date of Marriage Anniversary</label>
                                @Html.TextBoxFor(model => model.CompanyAdminDateOfMarriageAnniversary, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control required", @placeholder = "Enter Date of Anniversary" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminDateOfMarriageAnniversary, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Mobile No* <b>(OTP will receive in this entered number)</b></label>
                                @Html.TextBoxFor(model => model.CompanyAdminMobileNo, new { @type = "text", @class = "form-control", @placeholder = "Enter Mobile No", @maxlength = "10" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminMobileNo, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Alternate Mobile No</label>
                                @Html.TextBoxFor(model => model.CompanyAdminAlternateMobileNo, new { @type = "text", @class = "form-control", @placeholder = "Enter Alternate MobileNo", @maxlength = "10" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminAlternateMobileNo, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Designation*</label>
                                @Html.TextBoxFor(model => model.CompanyAdminDesignation, new { @type = "text", @class = "form-control customuppercase", @placeholder = "Designation" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminDesignation, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Address*</label>
                                @Html.TextBoxFor(model => model.CompanyAdminAddress, new { @type = "text", @class = "form-control customuppercase", @placeholder = "Enter Address" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminAddress, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>City*</label>
                                @Html.TextBoxFor(model => model.CompanyAdminCity, new { @type = "text", @class = "form-control customuppercase", @placeholder = "Enter City" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminCity, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Pincode*</label>
                                @Html.TextBoxFor(model => model.CompanyAdminPincode, new { @type = "Text", @class = "form-control", @placeholder = "Enter Pincode", @maxlength = "6" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminPincode, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>State*</label>
                                @Html.DropDownListFor(model => model.CompanyAdminStateId, new SelectList(Model.CompanyAdminStateList, "Value", "Text"), "- Select -", new { @class = "form-control required" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminStateId, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group dvCompanyAdminDistrict">
                                <label>District*</label>
                                @Html.DropDownListFor(model => model.CompanyAdminDistrictId, new SelectList(Model.CompanyAdminDistrictList, "Value", "Text"), "- Select -", new { @class = "form-control required" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminDistrictId, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Company Admin Profile Photo*</label>
                                @Html.TextBoxFor(model => model.CompanyAdminProfilePhotoFile, new { type = "file", @class = "form-control required" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminProfilePhotoFile, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Pan Card No</label>
                                @Html.TextBoxFor(model => model.CompanyAdminPanCardNo, new { @type = "text", @class = "form-control customuppercase", @placeholder = "Enter Pan Card No", @maxlength = "10" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminPanCardNo, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Pan card Photo*</label>
                                @Html.TextBoxFor(model => model.CompanyAdminPanCardPhotoFile, new { type = "file", @class = "form-control required" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminPanCardPhotoFile, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Aadhar card  No*</label>
                                @Html.TextBoxFor(model => model.CompanyAdminAadharCardNo, new { @type = "text", @class = "form-control customuppercase", @placeholder = "Enter Aadhar card No", @maxlength = "12" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminAadharCardNo, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Aadhar card Photo*</label>
                                @Html.TextBoxFor(model => model.CompanyAdminAadharCardPhotoFile, new { type = "file", @class = "form-control required" })
                                @Html.ValidationMessageFor(model => model.CompanyAdminAadharCardPhotoFile, "", new { @class = "error" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.CheckBoxFor(model => model.IsAccept, new { @class = "required" })
                                I accept <a href="/termscondition" target="_blank" style="color:blue"> Terms & Conditions </a>
                                <p> @Html.ValidationMessageFor(model => model.IsAccept, "", new { @class = "error" })</p>

                            </div>
                        </div>
                    </div>
                    <div class="form-group mt-3">
                        <button type="submit" id="btnSubmit" class="button button-contactForm boxed-btn">Submit</button>
                        @Html.HiddenFor(model => model.OTP)
                    </div>
                }
            </div>

        </div>
    </div>
</section>
<div class="modal fade" id="OtpModal" tabindex="-1" role="dialog" aria-labelledby="formModal"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="formModal">Mobile Verification</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form class="">
                    <div class="form-group">
                        <label>OTP</label>
                        <div class="input-group">
                            @*<div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fas fa-envelope"></i>
                                    </div>
                                </div>*@
                            <input type="text" class="form-control" placeholder="Enter OTP" name="OTP" id="TextOTP">
                        </div>
                    </div>
                    <button type="button" id="BtnOtpSubmit" class="btnSubmit">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>


<script type="text/javascript">
    $(document).on('keypress', function (e) {
        if (e.which == 13) {
            if ($('#OtpModal').hasClass('show')) {
                $('#BtnOtpSubmit').click();
                return false;
            } else {
                $('#btnSubmit').click();
                return false;
            }
        }
    });
    $(document).ready(function () {

        $(".customuppercase").keyup(function () {
            this.value = this.value.toLocaleUpperCase();
        });

        $('#btnSubmit').click(function () {

            if ($("#CompanyRequestFormId").valid()) {

                var firstname = $("#CompanyAdminFirstName").val();
                var lastname = $("#CompanyAdminLastName").val();
                var fullname = firstname + " " + lastname;

                var mobileNo = $("#CompanyAdminMobileNo").val();
                var StrURL = '/client/companyrequest/VerifyMobileNo?mobileNo=' + mobileNo + "&fullname=" + fullname;
                $.ajax({
                    url: StrURL,
                    cache: false,
                    data: {},
                    type: 'POST',
                    success: function (data) {

                        if (data.Status == 1) {
                            $('#OtpModal').modal('show');
                            $("#OTP").val(data.Otp);
                        }
                        else {

                            alert(data.ErrorMessage);
                        }

                    },
                    error: function (req, status, error) { 
                        alert(error);
                    }
                });
            }
            else {
                return false;
            }

            return false;
        });

        $('#BtnOtpSubmit').click(function () {
            var OTP = $("#OTP").val();
            var TextOTP = $("#TextOTP").val();

            if (TextOTP == OTP) {
                $("#CompanyRequestFormId").submit();

            } else {
                alert("Wrong OTP you have entered.")
                return false;
            }
        });

        jQuery(document).on("change", "#CompanyStateId", function () {
            var CompanyStateId = jQuery("#CompanyStateId option:selected").val();
            if (CompanyStateId != "" && CompanyStateId != null) {
                var URL = '@Url.Action("GeAjaxtDistrictListByStateId", "CompanyRequest")';
                $.ajax({
                    type: 'GET',
                    async: true,
                    url: URL + "/" + CompanyStateId,
                    success: function (result) {
                        var htmlData = "<option value=''>- Select -</option>";
                        var htmlDataLI = "<li class='option'>- Select -</li>";
                        if (result && result.length > 0) {
                            result.forEach(element => {
                                htmlData += "<option value='" + element.Value + "'> " + element.Text + " </option>";
                                htmlDataLI += "<li class='option' data-value=" + element.Value + ">" + element.Text + "<li>";
                            });
                        }
                        $("#CompanyDistrictId").html(htmlData);
                        $(".dvCompanyDistrict ul.list").html(htmlDataLI);
                        $(".dvCompanyDistrict .nice-select span.current").text('- Select -');
                    },
                    error: function (error) {
                    }
                });
            }
           else {
                var htmlSubData = "<option value=''>- Select -</option>";
                $("#CompanyDistrictId").html(htmlSubData);

                var htmlDataLI = "<li class='option'>- Select -</li>";
                $(".dvCompanyDistrict ul.list").html(htmlDataLI);
                $(".dvCompanyDistrict .nice-select span.current").text('- Select -');
            }
        });

        jQuery(document).on("change", "#CompanyAdminStateId", function () {
            var CompanyAdminStateId = jQuery("#CompanyAdminStateId option:selected").val();
            if (CompanyAdminStateId != "" && CompanyAdminStateId != null) {
                var URL = '@Url.Action("GeAjaxtDistrictListByStateId", "CompanyRequest")';
                $.ajax({
                    type: 'GET',
                    async: true,
                    url: URL + "/" + CompanyAdminStateId,
                    success: function (result) {
                        var htmlData = "<option value=''>- Select -</option>";
                        var htmlDataLI = "<li class='option'>- Select -</li>";
                        if (result && result.length > 0) {
                            result.forEach(element => {
                                htmlData += "<option value='" + element.Value + "'> " + element.Text + " </option>";
                                htmlDataLI += "<li class='option' data-value=" + element.Value + ">" + element.Text + "<li>";
                            });
                        }
                        $("#CompanyAdminDistrictId").html(htmlData);
                        $(".dvCompanyAdminDistrict ul.list").html(htmlDataLI);
                        $(".dvCompanyAdminDistrict .nice-select span.current").text('- Select -');
                    },
                    error: function (error) {
                    }
                });
            }
           else {
                var htmlSubData = "<option value=''>- Select -</option>";
                $("#CompanyAdminDistrictId").html(htmlSubData);

                var htmlDataLI = "<li class='option'>- Select -</li>";
                $(".dvCompanyAdminDistrict ul.list").html(htmlDataLI);
                $(".dvCompanyAdminDistrict .nice-select span.current").text('- Select -');
            }
        });

    })
</script>