@using AttendanceSystem.Helper
@model SuperAdminSettingVM
@{
    ViewBag.Title = "Setting";
}

<section class="section">

    <div class="row">
        <div class="col-12">
            @using (Html.BeginForm("EditSuperAdminSetting", "Setting", FormMethod.Post, new { @id = "SettingFormId", @class = "", enctype = "multipart/form-data", role = "form" }))
            {
                <div class="card">
                    <div class="card-header" style="background-color: #425C59;">
                        <h4 style="color: #FFCEA3;">Edit General Setting</h4>
                    </div>
                </div>

                <div class="card card-primary">

                    <div class="card-body">
                        <div class="row">
                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.AccountFreeAccessDays, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.AccountFreeAccessDays, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Account Free Access Days", maxlength = "10" } })
                                @Html.ValidationMessageFor(model => model.AccountFreeAccessDays, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.AmountPerEmp, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.AmountPerEmp, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Amount Per Employee Buy", maxlength = "10" } })
                                @Html.ValidationMessageFor(model => model.AmountPerEmp, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.AccountPackageBuyGSTPer, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.AccountPackageBuyGSTPer, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Account Package Buy GST (%)", maxlength = "10" } })
                                @Html.ValidationMessageFor(model => model.AccountPackageBuyGSTPer, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SMSPackageBuyGSTPer, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SMSPackageBuyGSTPer, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter SMS Package Buy GST (%)", maxlength = "10" } })
                                @Html.ValidationMessageFor(model => model.SMSPackageBuyGSTPer, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.EmployeeBuyGSTPer, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.EmployeeBuyGSTPer, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Employee Buy GST Per (%)", maxlength = "10" } })
                                @Html.ValidationMessageFor(model => model.EmployeeBuyGSTPer, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="row">
                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.ServiceImageFile, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.ServiceImageFile, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ServiceImageFile, "", new { @class = "text-danger" })

                                @if (!string.IsNullOrEmpty(Model.ServiceImage))
                                {
                                    <p><a target="_blank" href="@ErrorMessage.ServiceDirectoryPath/@Model.ServiceImage"> Click here to view image </a></p>
                                }

                            </div>
                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.HomeImageFile, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.HomeImageFile, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.HomeImageFile, "", new { @class = "text-danger" })

                                @if (!string.IsNullOrEmpty(Model.HomeImage))
                                {
                                    <p><a target="_blank" href="@ErrorMessage.HomeDirectoryPath/@Model.HomeImage"> Click here to view image </a></p>
                                }
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.HomeImageFile2, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.HomeImageFile2, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.HomeImageFile2, "", new { @class = "text-danger" })

                                @if (!string.IsNullOrEmpty(Model.HomeImage2))
                                {
                                    <p><a target="_blank" href="@ErrorMessage.HomeDirectoryPath/@Model.HomeImage2"> Click here to view image </a></p>
                                }
                            </div>

                        </div>
                    </div>

                </div>

                <div class="card card-primary">
                    <div class="card-header">
                        <h4>Super Admin Information</h4>
                    </div>

                    <div class="card-body">
                        <div class="row">
                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SuperAdminEmailId, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SuperAdminEmailId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Super Admin Email Id", maxlength = "100" } })
                                @Html.ValidationMessageFor(model => model.SuperAdminEmailId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SuperAdminMobileNo, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SuperAdminMobileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Super Admin Mobile No", maxlength = "10" } })
                                @Html.ValidationMessageFor(model => model.SuperAdminMobileNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                </div>

                <div class="card card-primary">
                    <div class="card-header">
                        <h4>SMTP Information</h4>
                    </div>

                    <div class="card-body">
                        <div class="row">
                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SMTPHost, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SMTPHost, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter SMTP Host", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.SMTPHost, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SMTPPort, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SMTPPort, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter SMTP Port", maxlength = "5" } })
                                @Html.ValidationMessageFor(model => model.SMTPPort, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SMTPEnableSSL, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SMTPEnableSSL, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter SMTP EnableS SSL" } })
                                @Html.ValidationMessageFor(model => model.SMTPEnableSSL, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SMTPEmail, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SMTPEmail, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter SMTP Email Id", maxlength = "100" } })
                                @Html.ValidationMessageFor(model => model.SMTPEmail, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SMTPPassword, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SMTPPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter SMTP Password", maxlength = "100" } })
                                @Html.ValidationMessageFor(model => model.SMTPPassword, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SMTPFromEmailId, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SMTPFromEmailId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter SMTP From Email Id", maxlength = "100" } })
                                @Html.ValidationMessageFor(model => model.SMTPFromEmailId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                </div>

                <div class="card card-primary">
                    <div class="card-header">
                        <h4>Stripe Payment Gateway Information</h4>
                    </div>

                    <div class="card-body">
                        <div class="row">
                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.StripeSandboxModeAPIKey, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.StripeSandboxModeAPIKey, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Stripe Sandbox Mode API Key", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.StripeSandboxModeAPIKey, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.StripeLiveModeAPIKey, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.StripeLiveModeAPIKey, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Stripe Live Mode API Key", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.StripeLiveModeAPIKey, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.IsStripeLiveMode, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.IsStripeLiveMode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Is Stripe Live Mode ?" } })
                                @Html.ValidationMessageFor(model => model.IsStripeLiveMode, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>

                </div>

                <div class="card card-primary">
                    <div class="card-header">
                        <h4>Hero Images of Frontend Pages</h4>
                    </div>

                    <div class="card-body">
                        <div class="row">

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.HeroAboutPageImageFile, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.HeroAboutPageImageFile, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.HeroAboutPageImageFile, "", new { @class = "text-danger" })

                                @if (!string.IsNullOrEmpty(Model.HeroAboutPageImageName))
                                {
                                    <p><a target="_blank" href="@ErrorMessage.HeroDirectoryPath/@Model.HeroAboutPageImageName"> Click here to view image </a></p>
                                }
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.HeroContactPageImageFile, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.HeroContactPageImageFile, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.HeroContactPageImageFile, "", new { @class = "text-danger" })

                                @if (!string.IsNullOrEmpty(Model.HeroContactPageImageName))
                                {
                                    <p><a target="_blank" href="@ErrorMessage.HeroDirectoryPath/@Model.HeroContactPageImageName"> Click here to view image </a></p>
                                }
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.HeroTermsConditionPageImageFile, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.HeroTermsConditionPageImageFile, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.HeroTermsConditionPageImageFile, "", new { @class = "text-danger" })

                                @if (!string.IsNullOrEmpty(Model.HeroTermsConditionPageImageName))
                                {
                                    <p><a target="_blank" href="@ErrorMessage.HeroDirectoryPath/@Model.HeroTermsConditionPageImageName"> Click here to view image </a></p>
                                }
                            </div>

                        </div>

                        <div class="row">

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.HeroFAQPageImageFile, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.HeroFAQPageImageFile, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.HeroFAQPageImageFile, "", new { @class = "text-danger" })

                                @if (!string.IsNullOrEmpty(Model.HeroFAQPageImageName))
                                {
                                    <p><a target="_blank" href="@ErrorMessage.HeroDirectoryPath/@Model.HeroFAQPageImageName"> Click here to view image </a></p>
                                }
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.HeroServicePageImageFile, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.HeroServicePageImageFile, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.HeroServicePageImageFile, "", new { @class = "text-danger" })

                                @if (!string.IsNullOrEmpty(Model.HeroServicePageImageName))
                                {
                                    <p><a target="_blank" href="@ErrorMessage.HeroDirectoryPath/@Model.HeroServicePageImageName"> Click here to view image </a></p>
                                }
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.HeroPrivacyPolicyPageImageFile, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.HeroPrivacyPolicyPageImageFile, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.HeroPrivacyPolicyPageImageFile, "", new { @class = "text-danger" })

                                @if (!string.IsNullOrEmpty(Model.HeroPrivacyPolicyPageImageName))
                                {
                                    <p><a target="_blank" href="@ErrorMessage.HeroDirectoryPath/@Model.HeroPrivacyPolicyPageImageName"> Click here to view image </a></p>
                                }
                            </div>

                        </div>

                        <div class="row">

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.HeroHowToUsePageImageFile, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.HeroHowToUsePageImageFile, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.HeroHowToUsePageImageFile, "", new { @class = "text-danger" })

                                @if (!string.IsNullOrEmpty(Model.HeroHowToUsePageImageName))
                                {
                                    <p><a target="_blank" href="@ErrorMessage.HeroDirectoryPath/@Model.HeroHowToUsePageImageName"> Click here to view image </a></p>
                                }
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.HeroCompanyRequestPageImageFile, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.HeroCompanyRequestPageImageFile, new { type = "file", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.HeroCompanyRequestPageImageFile, "", new { @class = "text-danger" })

                                @if (!string.IsNullOrEmpty(Model.HeroCompanyRequestPageImageName))
                                {
                                    <p><a target="_blank" href="@ErrorMessage.HeroDirectoryPath/@Model.HeroCompanyRequestPageImageName"> Click here to view image </a></p>
                                }
                            </div>
                              
                        </div>

                    </div>

                </div>

                <div class="card">
                    <div class="card-footer text-center">
                        @Html.HiddenFor(model => model.SettingId)
                        <button class="btn btn-success mr-1" type="submit">Submit</button>
                        <a href="/admin/setting" class="btn btn-secondary">Cancel</a>
                    </div>
                </div>
            }
        </div>
    </div>

</section>

