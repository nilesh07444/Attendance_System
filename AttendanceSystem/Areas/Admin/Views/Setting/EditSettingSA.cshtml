@model SuperAdminSettingVM
@{
    ViewBag.Title = "Setting";
}

<section class="section">

    <div class="row">
        <div class="col-12">
            @using (Html.BeginForm("EditSuperAdminSetting", "Setting", FormMethod.Post, new { @id = "SettingFormId", @class = "", enctype = "multipart/form-data", role = "form" }))
            {
                <div class="card card-primary">
                    <div class="card-header">
                        <h4>Edit General Setting</h4>
                    </div>

                    <div class="card-body">
                        <div class="row">
                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.AccountFreeAccessDays, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.AccountFreeAccessDays, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Account Free Access Days", maxlength = "10" } })
                                @Html.ValidationMessageFor(model => model.AccountFreeAccessDays, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.AmountPerEmp, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.AmountPerEmp, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Amount Per Employee Buy", maxlength = "10" } })
                                @Html.ValidationMessageFor(model => model.AmountPerEmp, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.AccountPackageBuyGSTPer, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.AccountPackageBuyGSTPer, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Account Package Buy GST (%)", maxlength = "10" } })
                                @Html.ValidationMessageFor(model => model.AccountPackageBuyGSTPer, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SMSPackageBuyGSTPer, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SMSPackageBuyGSTPer, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter SMS Package Buy GST (%)", maxlength = "10" } })
                                @Html.ValidationMessageFor(model => model.SMSPackageBuyGSTPer, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.EmployeeBuyGSTPer, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.EmployeeBuyGSTPer, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Employee Buy GST Per (%)", maxlength = "10" } })
                                @Html.ValidationMessageFor(model => model.EmployeeBuyGSTPer, "", new { @class = "text-danger" })
                            </div>

                        </div>


                    </div>

                </div>

                <div class="card card-primary">
                    <div class="card-header">
                        <h4>Super Admin Information</h4>
                    </div>

                    <div class="card-body">
                        <div class="row">
                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SuperAdminEmailId, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SuperAdminEmailId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Super Admin Email Id", maxlength = "100" } })
                                @Html.ValidationMessageFor(model => model.SuperAdminEmailId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SuperAdminMobileNo, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SuperAdminMobileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Super Admin Mobile No", maxlength = "10" } })
                                @Html.ValidationMessageFor(model => model.SuperAdminMobileNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                </div>

                <div class="card card-primary">
                    <div class="card-header">
                        <h4>SMTP Information</h4>
                    </div>

                    <div class="card-body">
                        <div class="row">
                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SMTPHost, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SMTPHost, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter SMTP Host", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.SMTPHost, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SMTPPort, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SMTPPort, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter SMTP Port", maxlength = "5" } })
                                @Html.ValidationMessageFor(model => model.SMTPPort, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SMTPEnableSSL, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SMTPEnableSSL, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter SMTP EnableS SSL" } })
                                @Html.ValidationMessageFor(model => model.SMTPEnableSSL, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SMTPEmail, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SMTPEmail, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter SMTP Email Id", maxlength = "100" } })
                                @Html.ValidationMessageFor(model => model.SMTPEmail, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SMTPPassword, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SMTPPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter SMTP Password", maxlength = "100" } })
                                @Html.ValidationMessageFor(model => model.SMTPPassword, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.SMTPFromEmailId, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.SMTPFromEmailId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter SMTP From Email Id", maxlength = "100" } })
                                @Html.ValidationMessageFor(model => model.SMTPFromEmailId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                </div>

                <div class="card card-primary">
                    <div class="card-header">
                        <h4>Razor Pay Information</h4>
                    </div>

                    <div class="card-body">
                        <div class="row">
                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.RazorPayKey, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.RazorPayKey, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Razor Pay Key", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.RazorPayKey, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-4">
                                @Html.LabelFor(model => model.RazorPaySecret, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.RazorPaySecret, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Razor Pay Secret", maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.RazorPaySecret, "", new { @class = "text-danger" })
                            </div>
                        </div> 
                    </div>

                </div>

                <div class="card">
                    <div class="card-footer text-center">
                        @Html.HiddenFor(model => model.SettingId)
                        <button class="btn btn-primary mr-1" type="submit">Submit</button>
                        <a href="/admin/setting" class="btn btn-secondary">Cancel</a>
                    </div>
                </div>
            }
        </div>
    </div>

</section>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>

<script type="text/javascript">

</script>
