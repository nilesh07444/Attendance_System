@model AttendanceSystem.ViewModel.EmployeeBuyTransactionVM
@{
    ViewBag.Title = "BuyEmployee";
}

<section class="section">

    <div class="row">
        <div class="col-12">

            <div class="card">
                <div class="card-header" style="background-color: #425C59; display: block;">
                    <div class="pull-left">
                        <h4 style="color: #FFCEA3;">Buy Employee</h4>
                    </div>
                    <div class="pull-right">
                        <a href="/admin/employeebuytransaction" class="btn btn-warning pull-right"><i class="fas fa-backward"></i> Back</a>
                    </div>
                </div>
            </div>

            <div class="card card-primary">

                @if (string.IsNullOrEmpty(Model.ErrorMessage))
                {
                    <div class="card-body">
                        <div class="row">
                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.NoOfEmpToBuy, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.NoOfEmpToBuy, new { @type = "number", @class = "form-control required", @placeholder = "Enter no of employee", @min = 1 })
                                @Html.ValidationMessageFor(model => model.NoOfEmpToBuy, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.EmployeeBuyTransactionId)
                                @Html.HiddenFor(model => model.CompanyId)
                            </div>
                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.AmountPerEmp, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.AmountPerEmp, new { @type = "number", @class = "form-control required ", @readonly = "true", @placeholder = "Enter amount per employee", @min = 1 })
                                @Html.ValidationMessageFor(model => model.AmountPerEmp, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.AmountPerEmp)
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.RemainingDays, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.RemainingDays, new { @type = "number", @class = "form-control required disabled", @readonly = "true", @placeholder = "Days", @min = 1 })
                                @Html.ValidationMessageFor(model => model.RemainingDays, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.RemainingDays)
                            </div>
                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.TotalPaidAmount, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.TotalPaidAmount, new { @type = "number", @class = "form-control required disabled", @readonly = "true", @placeholder = "Enter total paid amount", @min = 1 })
                                @Html.ValidationMessageFor(model => model.TotalPaidAmount, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.TotalPaidAmount)
                            </div>
                        </div>
                    </div>

                    <div class="card-footer text-center">
                        <button class="btn btn-primary mr-1" type="button" id="btnSubmit">Buy</button>
                        <a href="/admin/employeebuytransaction" class="btn btn-secondary">Cancel</a>
                    </div>
                }
                else
                {
                    <div class="card-body">
                        <label class="text-danger">@Model.ErrorMessage </label>
                    </div>
                }
            </div>
        </div>
    </div>

</section>

<!-- Render Payment Gateway popup -->
<div class="dvrazorpayscript"></div>

<!-- Confirmation to Buy -->
<div class="modal fade open" id="packageBuyConfirmModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Buy Confirm</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body">
                Are you sure want to buy extra employee ?
            </div>
            <div class="modal-footer">
                <input type="hidden" id="hdnSelectedPackageName" />
                <input type="hidden" id="hdnSelectedPackageAmount" />
                <input type="hidden" id="hdnSelectedPackageId" />
                <button data-dismiss="modal" class="btn btn-primary" type="button">Close</button>
                <button id="btnConfirmBuy" class="btn btn-danger" type="button">Buy</button>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script type="text/javascript">
    $(document).ready(function () {

        $('#NoOfEmpToBuy').change(function () {
            var noOfEmpToBuy = $("#NoOfEmpToBuy").val();
            var amountPerEmp = $("#AmountPerEmp").val();
            var remainingDays = $("#RemainingDays").val();

            var totalAmount = (parseFloat(noOfEmpToBuy) * parseFloat(amountPerEmp)) * parseFloat(remainingDays);
            $("#TotalPaidAmount").val(totalAmount.toFixed(2));
        });

        $('#btnSubmit').click(function () {
            var noOfEmpToBuy = $("#NoOfEmpToBuy").val();
            if (noOfEmpToBuy == "" || parseInt(noOfEmpToBuy) <= 0) {
                alert("Please enter No Of Employee. It should be greater than 0.");
                return false;
            }

            $('#packageBuyConfirmModal').modal('show');
        });

        $('#btnConfirmBuy').click(function () {

            var noOfEmpToBuy = $("#NoOfEmpToBuy").val();
            var amountPerEmp = $("#AmountPerEmp").val();
            var remainingDays = $("#RemainingDays").val();
             
            var totalAmount = (parseFloat(noOfEmpToBuy) * parseFloat(amountPerEmp)) * parseFloat(remainingDays);
            totalAmount = totalAmount.toFixed(2);

            $('#packageBuyConfirmModal').modal('hide');
            StartLoading();
            var StrURL = '/Admin/EmployeeBuyTransaction/CreateRazorPaymentOrder';

            $.ajax({
                url: StrURL,
                type: "post",
                dataType: "html",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ Amount: totalAmount, description: "Extra Employees" }), //add parameter
                success: function (data) {
                    StopLoading();
                    $('.dvrazorpayscript').html(data); //populate the tab content.
                },
                error: function () {
                    StopLoading();
                    alert("error");
                }
            });

        });

    });
</script>