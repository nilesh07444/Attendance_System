@using AttendanceSystem.Helper;
@model AttendanceSystem.ViewModel.EmployeeVM
@{
    ViewBag.Title = "Worker";

    List<EmployeeFingerprintVM> lstFingerprint = ViewData["lstFingerprint"] as List<EmployeeFingerprintVM>;

}

<div class="page-body">

    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header" style="background-color: #425C59; display: block;">
                        <div class="pull-left">
                            <h4 style="color: #FFCEA3;">View Worker - @Model.FirstName @Model.LastName</h4>
                        </div>
                        <div class="pull-right">
                            <a href="/admin/worker" class="btn btn-warning pull-right"><i class="fas fa-backward"></i> Back</a>
                        </div>
                    </div>
                </div>
                <div class="card">
                    <div class="card-header" style="display: block;">
                        <div class="pull-right">
                            <a href="/admin/worker/add/@Model.EmployeeId" class="btn btn-primary pull-right"><i class="fas fa-edit"></i> Edit</a>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="card-body">


                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.EmployeeCode, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.EmployeeCode, new { @type = "text", @class = "form-control", @placeholder = "Employee Code", @readonly = "true" })
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.WorkerTypeId, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.WorkerTypeText, new { @type = "text", @class = "form-control", @placeholder = "Worker Type", @readonly = "true" })
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.Prefix, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.Prefix, new { @type = "text", @class = "form-control", @placeholder = "Prefix", @readonly = "true" })
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.FirstName, new { @type = "text", @class = "form-control", @placeholder = "FirstName", @readonly = "true" })
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.LastName, new { @type = "text", @class = "form-control", @placeholder = "LastName", @readonly = "true" })
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.MobileNo, new { @type = "text", @class = "form-control", @placeholder = "MobileNo", @readonly = "true" })
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.Address, new { @type = "text", @class = "form-control", @placeholder = "Address", @readonly = "true" })
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.Pincode, new { @type = "text", @class = "form-control", @placeholder = "Pincode", @readonly = "true" })
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.City, new { @type = "text", @class = "form-control", @placeholder = "City", @readonly = "true" })
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.StateName, new { @type = "text", @class = "form-control", @placeholder = "State", @readonly = "true" })
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.DistrictName, new { @type = "text", @class = "form-control", @placeholder = "District", @readonly = "true" })
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @{ string Dob = Model.Dob != null ? Model.Dob.Value.ToString("dd MMM yyyy") : ""; }
                                    <input type="text" class="form-control" value="@Dob" placeholder="Birth Date" readonly />
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.DateOfJoin, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @{ string DateOfJoin = Model.DateOfJoin != null ? Model.DateOfJoin.Value.ToString("dd MMM yyyy") : ""; }
                                    <input type="text" class="form-control" value="@DateOfJoin" placeholder="Birth Date" readonly />
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.BloodGroup, new { @type = "text", @class = "form-control", @placeholder = "Blood Group", @readonly = "true" })
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.AdharCardNo, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.AdharCardNo, new { @type = "text", @class = "form-control", @placeholder = "Adhar Card No", @readonly = "true" })
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.EmploymentCategory, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.EmploymentCategoryText, new { @type = "text", @class = "form-control", @placeholder = "Employment Category", @readonly = "true" })
                                </div>
                            </div>

                            @if (Model.EmploymentCategory == (int)EmploymentCategory.MonthlyBased)
                            {
                                <div class="form-group row clsRow">
                                    @Html.LabelFor(model => model.MonthlySalaryPrice, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(model => model.MonthlySalaryPrice, new { @type = "text", @class = "form-control", @placeholder = "Monthly Salary Price", @readonly = "true" })
                                    </div>
                                </div>
                            }

                            <div class="form-group row clsRow">
                                @{ string strPerCategoryLabel = ""; }
                                @if (Model.EmploymentCategory == (int)EmploymentCategory.DailyBased)
                                {
                                    strPerCategoryLabel = "Per Day Salary";
                                }
                                else if (Model.EmploymentCategory == (int)EmploymentCategory.HourlyBased)
                                {
                                    strPerCategoryLabel = "Per Hour Price";
                                }
                                else if (Model.EmploymentCategory == (int)EmploymentCategory.UnitBased)
                                {
                                    strPerCategoryLabel = "Per Unit Price";
                                }
                                else
                                {
                                    strPerCategoryLabel = "Per Category Price";
                                }
                                <label class="col-sm-3 col-form-label">@strPerCategoryLabel</label>
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.PerCategoryPrice, new { @type = "text", @class = "form-control", @placeholder = "Per Category Price", @readonly = "true" })
                                </div>
                            </div>

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.ExtraPerHourPrice, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(model => model.ExtraPerHourPrice, new { @type = "text", @class = "form-control", @placeholder = "Extra Per Hour Price", @readonly = "true" })
                                </div>
                            </div>

                            @if (Model.EmploymentCategory == (int)EmploymentCategory.MonthlyBased)
                            {
                                <div class="form-group row clsRow">
                                    @Html.LabelFor(model => model.IsLeaveForward, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                    <div class="col-sm-9">
                                        <input type="text" class="form-control" value="@(Model.IsLeaveForward ? "Yes" : "No")" disabled />
                                    </div>
                                </div>

                                <div class="form-group row clsRow">
                                    @Html.LabelFor(model => model.NoOfFreeLeavePerMonth, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(model => model.NoOfFreeLeavePerMonth, new { @type = "text", @class = "form-control", @placeholder = "No Of Free Leave Per Month", @readonly = "true" })
                                    </div>
                                </div>
                            }

                            <div class="form-group row clsRow">
                                @Html.LabelFor(model => model.ProfileImageFile, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                                <div class="col-sm-9">
                                    @if (!string.IsNullOrEmpty(Model.ProfilePicture))
                                    {
                                        <a class="form-control" style="color:dodgerblue;" target="_blank" href="@ErrorMessage.EmployeeDirectoryPath/@Model.ProfilePicture"> Click here to view image </a>}
                                </div>
                            </div>


                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <div class="card-header-action pull-left">
                            <h4>Fingerprint List - @Model.Prefix @Model.FirstName @Model.LastName</h4>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover" id="tableExport" style="width:100%;">
                                <thead>
                                    <tr>
                                        <th width="10%">#</th>
                                        <th width="10%">Fingerprint</th>
                                        <th>Created Date</th>
                                        <th width="10%">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (lstFingerprint != null && lstFingerprint.Count > 0)
                                    {
                                        int counter = 1;
                                        foreach (EmployeeFingerprintVM obj in lstFingerprint)
                                        {
                                            <tr>
                                                <td>@counter.</td>
                                                <td>
                                                    <a href="/admin/employee/fingerprint/@obj.EmployeeId" title="Fingerprint">

                                                        @if (string.IsNullOrEmpty(obj.BitmapCode))
                                                        {
                                                            <img src="~/Content/admin-theme/assets/img/contrabook/fingerprint.jpg" alt="" class="img-fluid img-40 blur-up lazyloaded" style="width: 50px; height: 50px;" />
                                                        }
                                                        else
                                                        {
                                                            <img src="data:image/png;base64,@obj.BitmapCode" alt="" class="img-fluid img-40 blur-up lazyloaded" style="width: 50px; height: 50px;" />
                                                        }
                                                    </a>
                                                </td>
                                                <td>@obj.CreatedDate.ToString("dd/MM/yyyy hh:mm tt")</td>
                                                <td>
                                                    <a href="javascript:void(0);" title="Delete" class="btn btn-icon btn-danger" onclick="fnDeleteEmployeeFingerprint('@obj.EmployeeFingerprintId')"><i class="fas fa-trash-alt"></i></a>
                                                </td>
                                            </tr>
                                            counter++;
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>


            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->

</div>


<div class="modal fade open" id="deleteEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Delete Confirm</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete ?
            </div>
            <div class="modal-footer">
                <input type="hidden" id="hdnDeleteEmployeeFingerprint" />
                <button data-dismiss="modal" class="btn btn-primary" type="button">Close</button>
                <button id="btnDeleteEmployeeFingerprint" class="btn btn-danger" type="button">Submit</button>
            </div>
        </div>
    </div>
</div>


<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script>

    $('#btnDeleteEmployeeFingerprint').click(function () {
        var EmployeeFingerprint_Id = jQuery("#hdnDeleteEmployeeFingerprint").val();
        if (EmployeeFingerprint_Id != "" && EmployeeFingerprint_Id != null) {
                $('#deleteEmployeeModal').modal('hide');

                StartLoading();

                var URL = '@Url.Action("DeleteEmployeeFingerprint", "Worker")';
                $.ajax({
                    type: 'POST',
                    async: true,
                    url: URL + "?EmployeeFingerprintId=" + EmployeeFingerprint_Id,
                    success: function (result) {
                        if (result == "success") {
                            alert("Fingerprint deleted successfully");
                            window.location.reload();
                        }
                        else if (result == "notfound") {
                            alert("Fingerprint Not Found");
                        }
                        else {
                            alert("Something went wrong. Please try again");
                        }

                       StopLoading();
                    },
                    error: function (resultData) {
                       StopLoading();
                    }
                });
            }
    });

    function fnDeleteEmployeeFingerprint(EmployeeFingerprint_Id) {
        jQuery("#hdnDeleteEmployeeFingerprint").val(EmployeeFingerprint_Id);
        $('#deleteEmployeeModal').modal('show');
    }

</script>