@using AttendanceSystem.Helper;
@model AttendanceSystem.ViewModel.FeedbackVM
@{
    ViewBag.Title = "Feedback";
}

<section class="section">

    <div class="row">
        <div class="col-12">
            @using (Html.BeginForm("Edit", "Feedback", FormMethod.Post, new { @id = "FeedbackFormId", @class = "", enctype = "multipart/form-data", role = "form" }))
            {
                <div class="card card-primary">
                    <div class="card-header" style="display:block;">
                        <div class="pull-left">
                            <h4>@(Model.FeedbackId == 0 ? "Add" : "Edit") Feedback</h4>
                        </div>
                        <div class="pull-right">
                            <a href="/admin/feedback" class="btn btn-warning pull-right"><i class="fas fa-backward"></i> Back</a>
                        </div>
                    </div>


                    <div class="card-body">

                        <div class="row">
                            <div class="form-group col-3">
                                @Html.LabelFor(model => model.CompanyId)
                                <p>@Model.CompanyName</p>
                            </div>

                            <div class="form-group col-3">
                                @Html.LabelFor(model => model.FeedbackType)
                                <p>@Model.FeedbackTypeText</p>
                            </div>

                            <div class="form-group col-3">

                                @{
                                    string feedbackStatusClass = "";

                                    if (Model.FeedbackStatus == (int)FeedbackStatus.Pending)
                                    {
                                        feedbackStatusClass = "badge-primary";
                                    }
                                    else if (Model.FeedbackStatus == (int)FeedbackStatus.Resolved)
                                    {
                                        feedbackStatusClass = "badge-success";
                                    }
                                    else if (Model.FeedbackStatus == (int)FeedbackStatus.NotResolved)
                                    {
                                        feedbackStatusClass = "badge-danger";
                                    }
                                }

                                @Html.LabelFor(model => model.FeedbackStatus)
                                <p><span class="badge @feedbackStatusClass">@Model.FeedbackStatusText</span></p>
                            </div>

                            <div class="form-group col-3">
                                @Html.LabelFor(model => model.CreatedDate)
                                <p>@Model.CreatedDate.ToString("dd MMM yyyy")</p>
                            </div>

                        </div>

                        <div class="row">
                            <div class="form-group col-12">
                                @Html.LabelFor(model => model.FeedbackText)
                                <p>@Model.FeedbackText</p>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-12">
                                @Html.LabelFor(model => model.Remarks)
                                <p>@Model.Remarks</p>
                            </div>
                        </div>

                    </div>

                    



                </div>

                <div class="card card-primary">
                    <div class="card-header" style="display:block;">
                        <div class="pull-left">
                            <h4>Give your feedback</h4>
                        </div>
                    </div>

                    <div class="card-body">
                        <div class="row">
                            <div class="form-group col-3">
                                @Html.LabelFor(model => model.FeedbackStatus, htmlAttributes: new { @class = "" })
                                @Html.DropDownListFor(model => model.FeedbackStatus, new SelectList(Model.FeedBackStatusList, "Value", "Text"), "- Select -", new { @class = "form-control required" })
                                @Html.ValidationMessageFor(model => model.FeedbackStatus, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.SuperAdminFeedbackText, htmlAttributes: new { @class = "" })
                            @Html.TextAreaFor(model => model.SuperAdminFeedbackText, 10, 5, new { @class = "form-control required", @placeholder = "Enter Feedback Text", maxlength = "250" })
                            @Html.ValidationMessageFor(model => model.SuperAdminFeedbackText, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="card-footer text-center">
                        <button class="btn btn-primary mr-1" type="submit">Submit</button>
                        <a href="/admin/feedback" class="btn btn-secondary">Cancel</a>
                    </div>
                </div>
            }
        </div>
    </div>

</section>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>


<script type="text/javascript">
    $(document).ready(function () {
        $('#btnCancel').click(function () {
            window.location.href = "/admin/feedback";
        });

        $('#btnSubmit').click(function () {
            if ($("#FeedbackFormId").valid()) {

            }
            else {
                return false;
            }

        });

    })
</script>