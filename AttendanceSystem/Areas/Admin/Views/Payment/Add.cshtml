@using AttendanceSystem.Helper;
@model AttendanceSystem.ViewModel.PaymentVM
@{
    ViewBag.Title = "Payment";
    List<SelectListItem> lstPaymentType = new List<SelectListItem>(); 
}

<section class="section">

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header" style="background-color: #425C59; display: block;">
                    <div class="pull-left">
                        <h4 style="color: #FFCEA3;">@(Model.EmployeePaymentId == 0 ? "Give" : "Edit") Employee Payment</h4>
                    </div>
                    <div class="pull-right">
                        <a href="/admin/payment" class="btn btn-warning pull-right"><i class="fas fa-backward"></i> Back</a>
                    </div>
                </div>
            </div>
            <div class="card card-primary">
                 
                @using (Html.BeginForm("Add", "Payment", FormMethod.Post, new { @id = "EmployeePaymentFormId", @class = "", enctype = "multipart/form-data", role = "form" }))
                {
                    @Html.ValidationSummary()
                    <div class="card-body">
                        <div class="row">
                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "" })
                                @Html.DropDownListFor(model => model.UserId, new SelectList(Model.EmployeeList, "Value", "Text"), "- Select -", new { @class = "form-control required" })
                                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.EmployeePaymentId)
                                @Html.HiddenFor(model => model.OTP)
                            </div>
                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.PaymentType, htmlAttributes: new { @class = "" })
                                @Html.DropDownListFor(model => model.PaymentType, new SelectList(Model.EmployeePaymentTypeList, "Value", "Text"), "- Select -", new { @class = "form-control required" })
                                @Html.ValidationMessageFor(model => model.PaymentType, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.PaymentType)
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.PendingSalary, htmlAttributes: new { @class = "" }) :
                                @Html.Label(Model.PendingSalary.ToString(), new { @id = "lblPendingSalary" })
                                @Html.HiddenFor(model => model.PendingSalary)
                            </div>
                            @*<div class="form-group col-6">
                                <a id="MoreDetail" class="btn btn-secondary">Click here for more detail</a>
                            </div>*@
                        </div>
                        <div class="row">
                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.PaymentDate, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.PaymentDate, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control required", @placeholder = "Enter Payment Date" })
                                @Html.ValidationMessageFor(model => model.PaymentDate, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-6">
                                @Html.LabelFor(model => model.DebitAmount, htmlAttributes: new { @class = "" })
                                @Html.TextBoxFor(model => model.DebitAmount, new { @type = "number", @class = "form-control required", @placeholder = "Enter Amount", @maxlength = "10", @min = 1 })
                                @Html.ValidationMessageFor(model => model.DebitAmount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "" })
                            @Html.TextAreaFor(model => model.Remarks, 10, 5, new { @class = "form-control", @placeholder = "Enter Remarks", maxlength = "250" })
                            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="card-footer text-center">
                        <button class="btn btn-success mr-1" type="submit" id="btnSubmit">Submit</button>
                        <a href="/admin/payment" class="btn btn-secondary">Cancel</a>
                    </div>
                }

            </div>
        </div>
    </div>

</section>
<div class="modal fade" id="OtpModal" tabindex="-1" role="dialog" aria-labelledby="formModal"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="formModal">Mobile Verification</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form class="">
                    <div class="form-group">
                        <label>OTP</label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <div class="input-group-text">
                                    <i class="fas fa-envelope"></i>
                                </div>
                            </div>
                            <input type="text" class="form-control" placeholder="OTP" name="OTP" id="TextOTP">
                        </div>
                    </div>
                    <button type="button" id="BtnOtpSubmit" class="btn btn-primary m-t-15 waves-effect">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>


<script type="text/javascript">
    $(document).ready(function () {

        $('#MoreDetail').click(function () {
            var employeeId = $("#UserId").val();
            if (employeeId == "") {
                alert("Please select employee");
                return false;
            }

            window.location.href = "/admin/payment";
        });

        $('#btnCancel').click(function () {
            window.location.href = "/admin/payment";
        });

        $('#btnSubmit').click(function () {
            if ($("#EmployeePaymentFormId").valid()) {
                if (parseFloat($("#EmployeePaymentId").val()) > 0) {

                    var employeeId = $("#UserId").val();

                    var StrURL = '/admin/Payment/VerifyEmployeeMobileNo?employeeId=' + employeeId;
                    $.ajax({
                        url: StrURL,
                        cache: false,
                        data: {},
                        type: 'POST',
                        success: function (data) {
                            $.unblockUI();
                            if (data.Status == 1) {
                                $('#OtpModal').modal('show');
                                $("#OTP").val(data.Otp);  
                            }
                            else {
                                alert(data.ErrorMessage);
                            }

                        },
                        error: function (req, status, error) {
                            $.unblockUI();
                            alert(error);
                        }
                    });

                    return false;
                }
                $.blockUI({ message: '<h4> Please Wait...</h4>' });
            }
            else {
                return false;
            }

        });

        $('#BtnOtpSubmit').click(function () {
            var OTP = $("#OTP").val();
            var TextOTP = $("#TextOTP").val();

            if (TextOTP == OTP) {
                $("#EmployeePaymentFormId").submit();
            } else {
                alert("Wrong OTP you have entered.")
                return false;
            }
        });

        $('#UserId').change(function () {
            if (parseFloat($("#UserId").val()) > 0) {

                var employeeId = $("#UserId").val();

                var StrURL = '/admin/Payment/GetEmployeePendingSalary?employeeId=' + employeeId;
                $.ajax({
                    url: StrURL,
                    cache: false,
                    data: {},
                    type: 'POST',
                    success: function (data) {
                        $.unblockUI();
                        if (data.Status == 1) {
                            $("#lblPendingSalary").html(data.PendingSalary);
                            $("#PendingSalary").val(data.PendingSalary);
                        }
                        else {
                            alert(data.ErrorMessage);
                        }

                    },
                    error: function (req, status, error) {
                        $.unblockUI();
                        alert(error);
                    }
                });

                return false;
            }
            $.blockUI({ message: '<h4> Please Wait...</h4>' });


        });
    })
</script>