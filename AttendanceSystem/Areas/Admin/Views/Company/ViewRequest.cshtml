@using AttendanceSystem.Helper;
@model AttendanceSystem.ViewModel.CompanyRequestVM
@{ List<SelectListItem> lstCompanyStatus = new List<SelectListItem>();

    lstCompanyStatus.Add(new SelectListItem { Value = "2", Text = "Accept" });
    lstCompanyStatus.Add(new SelectListItem { Value = "3", Text = "Reject" }); }

<div class="page-body">

    <!-- Container-fluid starts-->
    <!-- Container-fluid Ends-->
    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header" style="background-color: #425C59;">
                        <h4 style="color: #FFCEA3;">Company Request Detail - @Model.CompanyName</h4>
                    </div>
                </div>
                @using (Html.BeginForm("EditRequest", "Company", FormMethod.Post, new { @id = "CompanyRequestForm", @class = "needs-validation", enctype = "multipart/form-data", role = "form" }))
                {
    <div class="card">

        <div class="card-header" style="display: block;">
            <div class="pull-left">
                <h5>Company Information</h5>
            </div>
            <div class="pull-right">
                <a href="/admin/company/requests" class="btn btn-warning pull-right"><i class="fas fa-backward"></i> Back</a>
            </div>
        </div>


        <div class="card-body">

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyName, new { @type = "text", @class = "form-control", @placeholder = "Company Name", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyTypeId, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyTypeText, new { @type = "text", @class = "form-control", @placeholder = "Company Type", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyEmailId, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyEmailId, new { @type = "text", @class = "form-control", @placeholder = "Company Email Id", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyContactNo, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyContactNo, new { @type = "text", @class = "form-control", @placeholder = "Company Contact No", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAlternateContactNo, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAlternateContactNo, new { @type = "text", @class = "form-control", @placeholder = "Company Alternate Contact No", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyWebisteUrl, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyWebisteUrl, new { @type = "text", @class = "form-control", @placeholder = "Company Webiste Url", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyDescription, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyDescription, new { @type = "text", @class = "form-control", @placeholder = "Company Description", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAddress, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAddress, new { @type = "text", @class = "form-control", @placeholder = "Company Address", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyCity, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyCity, new { @type = "text", @class = "form-control", @placeholder = "Company City", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyPincode, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyPincode, new { @type = "text", @class = "form-control", @placeholder = "Company Pincode", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyDistrict, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyDistrict, new { @type = "text", @class = "form-control", @placeholder = "Company District", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyGSTNo, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyGSTNo, new { @type = "text", @class = "form-control", @placeholder = "Company GST No", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyGSTPhotoFile, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @if (!string.IsNullOrEmpty(Model.CompanyGSTPhoto))
                        {
        <a class="form-control" style="color:dodgerblue;" target="_blank" href="@ErrorMessage.CompanyGSTDirectoryPath/@Model.CompanyGSTPhoto"> Click here to view image </a>}
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyPanNo, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyPanNo, new { @type = "text", @class = "form-control", @placeholder = "Company PAN No", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyPanPhotoFile, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @if (!string.IsNullOrEmpty(Model.CompanyPanPhoto))
                        {
        <a class="form-control" style="color:dodgerblue;" target="_blank" href="@ErrorMessage.CompanyPanCardDirectoryPath/@Model.CompanyPanPhoto"> Click here to view image </a>}
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyLogoImageFile, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @if (!string.IsNullOrEmpty(Model.CompanyLogoImage))
                        {
        <a class="form-control" style="color:dodgerblue;" target="_blank" href="@ErrorMessage.CompanyLogoDirectoryPath/@Model.CompanyLogoImage"> Click here to view image </a>}
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyRegisterProofImageFile, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @if (!string.IsNullOrEmpty(Model.CompanyRegisterProofImage))
                        {
        <a class="form-control" style="color:dodgerblue;" target="_blank" href="@ErrorMessage.CompanyRegisterProofDirectoryPath/@Model.CompanyRegisterProofImage"> Click here to view image </a>}
                    </div>
                </div>
            </div>

        </div>

        <div class="card-header">
            <div class="pull-left">
                <h5>Company Admin Information</h5>
            </div>
        </div>

        <div class="card-body">

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminPrefix, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminPrefix, new { @type = "text", @class = "form-control", @placeholder = "Company Admin Prefix", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminFirstName, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminFirstName, new { @type = "text", @class = "form-control", @placeholder = "Company Admin First Name", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminMiddleName, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminMiddleName, new { @type = "text", @class = "form-control", @placeholder = "Company Admin Middle Name", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminLastName, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminLastName, new { @type = "text", @class = "form-control", @placeholder = "Company Admin Last Name", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminEmailId, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminEmailId, new { @type = "text", @class = "form-control", @placeholder = "Company Admin Email Id", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminDOB, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminDOB, new { @type = "text", @class = "form-control", @placeholder = "Company Admin DOB", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminDateOfMarriageAnniversary, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        <input class="form-control" placeholder="Company Admin Date Of Marriage Anniversary" readonly type="text" value="@(Model.CompanyAdminDateOfMarriageAnniversary !=null ? Model.CompanyAdminDateOfMarriageAnniversary.Value.ToString("dd MMM yyyy") : "")">
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminMobileNo, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminMobileNo, new { @type = "text", @class = "form-control", @placeholder = "Company Admin Mobile No", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminAlternateMobileNo, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminAlternateMobileNo, new { @type = "text", @class = "form-control", @placeholder = "Company Admin Alternate Mobile No", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminDesignation, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminDesignation, new { @type = "text", @class = "form-control", @placeholder = "Company Admin Designation", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminAddress, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminAddress, new { @type = "text", @class = "form-control", @placeholder = "Company Admin Address", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminCity, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminCity, new { @type = "text", @class = "form-control", @placeholder = "Company Admin City", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminPincode, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminPincode, new { @type = "text", @class = "form-control", @placeholder = "Company Admin Pincode", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminDistrict, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminDistrict, new { @type = "text", @class = "form-control", @placeholder = "Company Admin District", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminState, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminState, new { @type = "text", @class = "form-control", @placeholder = "Company Admin State", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminProfilePhotoFile, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @if (!string.IsNullOrEmpty(Model.CompanyAdminProfilePhoto))
                        {
        <a class="form-control" style="color:dodgerblue;" target="_blank" href="@ErrorMessage.ProfileDirectoryPath/@Model.CompanyAdminProfilePhoto"> Click here to view image </a>}
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminPanCardNo, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminPanCardNo, new { @type = "text", @class = "form-control", @placeholder = "Company Admin Pan Card No", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminPanCardPhotoFile, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @if (!string.IsNullOrEmpty(Model.CompanyAdminPanCardPhoto))
                        {
        <a class="form-control" style="color:dodgerblue;" target="_blank" href="@ErrorMessage.PancardDirectoryPath/@Model.CompanyAdminPanCardPhoto"> Click here to view image </a>}
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminAadharCardNo, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(model => model.CompanyAdminAadharCardNo, new { @type = "text", @class = "form-control", @placeholder = "Company Admin Aadhar Card No", @readonly = "true" })
                    </div>
                </div>
            </div>

            <div class="col-sm-12">
                <div class="form-group row clsRow">
                    @Html.LabelFor(model => model.CompanyAdminAadharCardPhotoFile, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @if (!string.IsNullOrEmpty(Model.CompanyAdminAadharCardPhoto))
                        {
        <a class="form-control" style="color:dodgerblue;" target="_blank" href="@ErrorMessage.AdharcardDirectoryPath/@Model.CompanyAdminAadharCardPhoto"> Click here to view image </a>}
                    </div>
                </div>
            </div>

        </div>

    </div> if (Model.RequestStatus == (int)CompanyRequestStatus.Pending)
    {
<div class="card">

    <div class="card-header">
        <div class="pull-left">
            <h5>Change Status of Company Request</h5>
        </div>
    </div>

    <div class="card-body">


        <div class="row">
            <div class="col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.RequestStatus)
                    @Html.DropDownListFor(model => model.RequestStatus, new SelectList(lstCompanyStatus, "Value", "Text"), "- Select -", new { @class = "form-control required", @style = "width:20%" })
                    @Html.ValidationMessageFor(model => model.RequestStatus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-sm-12">
            <div class="form-group row" id="dvRejectReason">
                @Html.LabelFor(model => model.RejectReason)
                @Html.TextBoxFor(model => model.RejectReason, new { @type = "text", @class = "form-control", @placeholder = "Enter Reject Reason" })
            </div>
        </div>

        <div class="form-group row">
            @Html.HiddenFor(model => model.CompanyTypeId)
            @Html.HiddenFor(model => model.CompanyRequestId)
            @Html.HiddenFor(model => model.CompanyName)
            <button type="submit" class="btn btn-success" style="margin-left:15px; margin-right:10px;" id="btnSubmit">Submit</button>
            <button type="button" class="btn btn-danger" id="btnCancel">Cancel</button>
        </div>
    </div>
</div>      }
}

            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->

</div>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        if ($("#RequestStatus").val() == "3") {
            $("#dvRejectReason").show();
        } else {
            $("#dvRejectReason").hide();
            $("#RejectReason").val("");
        }

        $('#btnCancel').click(function () {
            window.location.href = "/admin/company/Requests";
        });

        $("#RequestStatus").change(function () {
            var requestStatus = $("#RequestStatus").val();
            if (requestStatus == "3") {
                $("#dvRejectReason").show();
            } else {
                $("#dvRejectReason").hide();
                $("#RejectReason").val("");
            }

        });

        $('#btnSubmit').click(function () {
            if ($("#CompanyRequestForm").valid()) {
                var requestStatus = $("#RequestStatus").val();
                if (requestStatus == "") {
                    alert("Please select request reason.");
                    return false;
                }
                if (requestStatus == "3" && $("#RejectReason").val() == "") {
                    alert("Please enter reject reason.");
                    return false;
                }
            }
            else {
                return false;
            }

        });
    })
</script>