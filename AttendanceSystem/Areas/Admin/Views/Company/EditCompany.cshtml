@using AttendanceSystem.Helper;
@model AttendanceSystem.ViewModel.CompanyRequestVM
@{
    ViewBag.Title = "Company";

    List<SelectListItem> lstPrefix = new List<SelectListItem>();

    lstPrefix.Add(new SelectListItem { Value = "Mr", Text = "Mr" });
    lstPrefix.Add(new SelectListItem { Value = "Mrs", Text = "Mrs" });
    lstPrefix.Add(new SelectListItem { Value = "Miss", Text = "Miss" });
}

<div class="page-body">

    <!-- Container-fluid starts-->
    <!-- Container-fluid Ends-->
    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header" style="background-color: #425C59;">
                        <h4 style="color: #FFCEA3;">Edit Company - @Model.CompanyName</h4>
                    </div>
                </div>

                <div class="card">
                    <div class="card-header" style="display:block;">
                        <div class="pull-left">
                            <h5>Company Information</h5>
                        </div>
                        <div class="pull-right">
                            <a href="/admin/company/registered" class="btn btn-warning pull-right"><i class="fas fa-backward"></i> Back</a>
                        </div>

                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("EditCompany", "company", FormMethod.Post, new { @id = "CompanyEditForm", @class = "needs-validation", enctype = "multipart/form-data", role = "form" }))
                        {
                            @Html.HiddenFor(model => model.CompanyId)
                            @Html.HiddenFor(model => model.CompanyName)
                            @Html.HiddenFor(model => model.CompanyTypeId)
                            @Html.HiddenFor(model => model.CompanyTypeText)
                            @*<div class="row">
                                    <div class="col-12">
                                        <h5>Company Information</h5>
                                    </div>
                                </div>*@
                            <div class="row">

                                <div class="form-group col-6">
                                    @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "" })
                                    @Html.TextBoxFor(model => model.CompanyName, new { @type = "text", @class = "form-control", @placeholder = "Enter Company Name" })
                                    @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "error" })
                                </div>
                                <div class="form-group col-6">
                                    @Html.LabelFor(model => model.CompanyTypeId, htmlAttributes: new { @class = "" })
                                    <p>@Model.CompanyTypeText</p>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyEmailId, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyEmailId, new { @type = "email", @class = "form-control", @placeholder = "Enter Company Email Id" })
                                        @Html.ValidationMessageFor(model => model.CompanyEmailId, "", new { @class = "error" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyContactNo, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyContactNo, new { @type = "text", @class = "form-control", @placeholder = "Enter Company Mobile No", @maxlength = "10" })
                                        @Html.ValidationMessageFor(model => model.CompanyContactNo, "", new { @class = "error" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAlternateContactNo, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAlternateContactNo, new { @type = "text", @class = "form-control", @placeholder = "Enter Company Alternate Mobile No", @maxlength = "10" })
                                        @Html.ValidationMessageFor(model => model.CompanyAlternateContactNo, "", new { @class = "error" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyWebisteUrl, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyWebisteUrl, new { @type = "text", @class = "form-control", @placeholder = "Enter Company Website URL" })
                                        @Html.ValidationMessageFor(model => model.CompanyWebisteUrl, "", new { @class = "error" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyDescription, htmlAttributes: new { @class = "" })
                                        @Html.TextAreaFor(model => model.CompanyDescription, 10, 5, new { @class = "form-control", @placeholder = "Enter Company Description", maxlength = "250" })
                                        @Html.ValidationMessageFor(model => model.CompanyDescription, "", new { @class = "error" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAddress, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAddress, new { @type = "text", @class = "form-control", @placeholder = "Enter Address" })
                                        @Html.ValidationMessageFor(model => model.CompanyAddress, "", new { @class = "error" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyCity, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyCity, new { @type = "Text", @class = "form-control", @placeholder = "Enter City", @maxlength = "20" })
                                        @Html.ValidationMessageFor(model => model.CompanyCity, "", new { @class = "error" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyPincode, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyPincode, new { @type = "Text", @class = "form-control", @placeholder = "Enter Pincode", @maxlength = "6" })
                                        @Html.ValidationMessageFor(model => model.CompanyPincode, "", new { @class = "error" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyDistrict, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyDistrict, new { @type = "text", @class = "form-control", @placeholder = "Enter District" })
                                        @Html.ValidationMessageFor(model => model.CompanyDistrict, "", new { @class = "error" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyState, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyState, new { @type = "text", @class = "form-control", @placeholder = "Enter State" })
                                        @Html.ValidationMessageFor(model => model.CompanyState, "", new { @class = "error" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyGSTNo, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyGSTNo, new { @type = "text", @class = "form-control", @placeholder = "Enter Company GST No", @maxlength = "15" })
                                        @Html.ValidationMessageFor(model => model.CompanyGSTNo, "", new { @class = "error" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyGSTPhotoFile, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyGSTPhotoFile, new { type = "file", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CompanyGSTPhotoFile, "", new { @class = "error" })
                                        @Html.HiddenFor(model => model.CompanyGSTPhoto)
                                        @if (!string.IsNullOrEmpty(Model.CompanyGSTPhoto))
                                        {
                                            <p><a target="_blank" href="@ErrorMessage.CompanyGSTDirectoryPath/@Model.CompanyGSTPhoto"> Click here to view image </a></p>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyPanNo, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyPanNo, new { @type = "text", @class = "form-control", @placeholder = "Enter Pan Card No", @maxlength = "10" })
                                        @Html.ValidationMessageFor(model => model.CompanyPanNo, "", new { @class = "error" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyPanPhotoFile, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyPanPhotoFile, new { type = "file", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CompanyPanPhotoFile, "", new { @class = "error" })
                                        @Html.HiddenFor(model => model.CompanyPanPhoto)
                                        @if (!string.IsNullOrEmpty(Model.CompanyPanPhoto))
                                        {
                                            <p><a target="_blank" href="@ErrorMessage.CompanyPanCardDirectoryPath/@Model.CompanyPanPhoto"> Click here to view image </a></p>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyLogoImageFile, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyLogoImageFile, new { type = "file", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CompanyLogoImageFile, "", new { @class = "error" })
                                        @Html.HiddenFor(model => model.CompanyLogoImage)
                                        @if (!string.IsNullOrEmpty(Model.CompanyLogoImage))
                                        {
                                            <p><a target="_blank" href="@ErrorMessage.CompanyLogoDirectoryPath/@Model.CompanyLogoImage"> Click here to view image </a></p>
                                        }
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyRegisterProofImageFile, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyRegisterProofImageFile, new { type = "file", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CompanyRegisterProofImageFile, "", new { @class = "error" })
                                        @Html.HiddenFor(model => model.CompanyRegisterProofImage)
                                        @if (!string.IsNullOrEmpty(Model.CompanyRegisterProofImage))
                                        {
                                            <p><a target="_blank" href="@ErrorMessage.CompanyRegisterProofDirectoryPath/@Model.CompanyRegisterProofImage"> Click here to view image </a></p>
                                        }
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="card-header" style="padding-left:0;">
                                <h5>Company Admin Information</h5>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminPrefix, htmlAttributes: new { @class = "" })
                                        @Html.DropDownListFor(model => model.CompanyAdminPrefix, new SelectList(lstPrefix, "Value", "Text"), "- Select -", new { @class = "form-control", style = "width: 100%" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminPrefix, "", new { @class = "error" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminFirstName, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminFirstName, new { @type = "text", @class = "form-control", @placeholder = "Enter First Name" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminFirstName, "", new { @class = "error" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminMiddleName, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminMiddleName, new { @type = "text", @class = "form-control", @placeholder = "Enter Middle Name" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminMiddleName, "", new { @class = "error" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminLastName, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminLastName, new { @type = "text", @class = "form-control", @placeholder = "Enter Last Name" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminLastName, "", new { @class = "error" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminEmailId, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminEmailId, new { @type = "email", @class = "form-control", @placeholder = "Enter Email Id" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminEmailId, "", new { @class = "error" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminDOB, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminDOB, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control required", @placeholder = "Enter Date of Birth" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminDOB, "", new { @class = "error" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminDateOfMarriageAnniversary, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminDateOfMarriageAnniversary, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control required", @placeholder = "Enter Date of Marriage Anniversary" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminDateOfMarriageAnniversary, "", new { @class = "error" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminMobileNo, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminMobileNo, new { @type = "text", @class = "form-control", @placeholder = "Enter Mobile No", @maxlength = "10" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminMobileNo, "", new { @class = "error" })
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminAlternateMobileNo, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminAlternateMobileNo, new { @type = "text", @class = "form-control", @placeholder = "Enter Alternate MobileNo", @maxlength = "10" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminAlternateMobileNo, "", new { @class = "error" })
                                    </div>
                                </div>

                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminDesignation, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminDesignation, new { @type = "text", @class = "form-control", @placeholder = "Designation" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminDesignation, "", new { @class = "error" })
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminAddress, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminAddress, new { @type = "text", @class = "form-control", @placeholder = "Enter Address" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminAddress, "", new { @class = "error" })
                                    </div>
                                </div>

                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminCity, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminCity, new { @type = "text", @class = "form-control", @placeholder = "Enter City" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminCity, "", new { @class = "error" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminPincode, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminPincode, new { @type = "Text", @class = "form-control", @placeholder = "Enter Pincode", @maxlength = "6" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminPincode, "", new { @class = "error" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminDistrict, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminDistrict, new { @type = "text", @class = "form-control", @placeholder = "Enter District" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminDistrict, "", new { @class = "error" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminState, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminState, new { @type = "text", @class = "form-control", @placeholder = "Enter State" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminState, "", new { @class = "error" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminProfilePhotoFile, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminProfilePhotoFile, new { type = "file", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminProfilePhotoFile, "", new { @class = "error" })
                                        @Html.HiddenFor(model => model.CompanyAdminProfilePhoto)
                                        @if (!string.IsNullOrEmpty(Model.CompanyAdminProfilePhoto))
                                        {
                                            <p><a target="_blank" href="@ErrorMessage.ProfileDirectoryPath/@Model.CompanyAdminProfilePhoto"> Click here to view image </a></p>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminPanCardNo, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminPanCardNo, new { @type = "text", @class = "form-control", @placeholder = "Enter Pan Card No", @maxlength = "10" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminPanCardNo, "", new { @class = "error" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminPanCardPhotoFile, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminPanCardPhotoFile, new { type = "file", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminPanCardPhotoFile, "", new { @class = "error" })
                                        @Html.HiddenFor(model => model.CompanyAdminPanCardPhoto)
                                        @if (!string.IsNullOrEmpty(Model.CompanyAdminPanCardPhoto))
                                        {
                                            <p><a target="_blank" href="@ErrorMessage.PancardDirectoryPath/@Model.CompanyAdminPanCardPhoto"> Click here to view image </a></p>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminAadharCardNo, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminAadharCardNo, new { @type = "text", @class = "form-control", @placeholder = "Enter Aadhar card No", @maxlength = "12" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminAadharCardNo, "", new { @class = "error" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CompanyAdminAadharCardPhotoFile, htmlAttributes: new { @class = "" })
                                        @Html.TextBoxFor(model => model.CompanyAdminAadharCardPhotoFile, new { type = "file", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CompanyAdminAadharCardPhotoFile, "", new { @class = "error" })
                                        @Html.HiddenFor(model => model.CompanyAdminAadharCardPhoto)
                                        @if (!string.IsNullOrEmpty(Model.CompanyAdminAadharCardPhoto))
                                        {
                                            <p><a target="_blank" href="@ErrorMessage.AdharcardDirectoryPath/@Model.CompanyAdminAadharCardPhoto"> Click here to view image </a></p>
                                        }
                                    </div>
                                </div>
                            </div>


                            <div class="card-footer text-center">
                                <button type="submit" class="btn btn-success" style="margin-right:10px;" id="btnSubmit">Submit</button>
                                <button type="button" class="btn btn-danger" id="btnCancel">Cancel</button>
                                @Html.HiddenFor(model => model.OTP)
                            </div>

                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->

</div>
<div class="modal fade" id="OtpModal" tabindex="-1" role="dialog" aria-labelledby="formModal"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="formModal">Mobile Verification</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form class="">
                    <div class="form-group">
                        <label>OTP</label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <div class="input-group-text">
                                    <i class="fas fa-envelope"></i>
                                </div>
                            </div>
                            <input type="text" class="form-control" placeholder="OTP" name="OTP" id="TextOTP">
                        </div>
                    </div>
                    <button type="button" id="BtnOtpSubmit" class="btn btn-success m-t-15 waves-effect">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {

        $('#btnCancel').click(function () {
            window.location.href = "/admin/company/registered";
        });

        $('#btnSubmit').click(function () {
            if ($("#CompanyEditForm").valid()) {

                var companyId = $("#CompanyId").val();
                StartLoading();

                var StrURL = '/admin/company/VerifyCopmany?companyId=' + companyId;
                $.ajax({
                    url: StrURL,
                    cache: false,
                    data: {},
                    type: 'POST',
                    success: function (data) {
                        StopLoading();
                        if (data.Status == 1) {
                            $('#OtpModal').modal('show');
                            $("#OTP").val(data.Otp);
                            if (data.SetOtp) {
                                $("#TextOTP").val(data.Otp);
                            }
                        }
                        else {
                            StopLoading();
                            alert(data.ErrorMessage);
                        }

                    },
                    error: function (req, status, error) {
                        StopLoading();
                        alert(error);
                    }
                });
            }
            else {
                return false;
            }
            return false;
        });
        $('#BtnOtpSubmit').click(function () {
            var OTP = $("#OTP").val();
            var TextOTP = $("#TextOTP").val();

            if (TextOTP == OTP) {
                $("#CompanyEditForm").submit();
            } else {
                alert("Wrong OTP you have entered.")
                return false;
            }
        });
    })
</script>